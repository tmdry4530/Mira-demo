---
description: project-scope-definition
globs: 
alwaysApply: false
---
# Mira 합의메커니즘 시연 웹앱 - 프로젝트 목표 및 범위 정의

## 프로젝트 개요
Mira의 합의메커니즘을 간단하게 시연하는 웹 애플리케이션을 개발합니다. 사용자의 질문에 대한 AI 답변을 여러 검증자들이 검증하는 과정을 시각적으로 보여주는 시스템입니다.

## 핵심 기능

### 1. 사용자 입력 처리
- 사용자로부터 질문(프롬프트) 입력 받기
- 직관적이고 깔끔한 입력 인터페이스 제공

### 2. AI 답변 생성
- Gemini API를 활용한 답변 생성
- 답변 생성 중 로딩 화면 표시
- 생성 진행 상황 시각화

### 3. 명제 분할 시스템
- AI 생성 답변을 검증가능한 최소단위 명제로 자동 분할 (Gemini API 사용)
- 예시: "토끼는 달릴수있고, 하늘을 날수있다" → ["토끼는 달릴수있다", "토끼는 하늘을 날수있다"]
- 분할된 명제들을 명확하게 표시

### 4. 검증자 시스템
- 9개의 독립적인 검증자 (Gemini API 사용)
- 3x3 그리드 형태로 검증자 배치
- 각 검증자는 분할된 명제에 대해 사실/거짓 판정

### 5. 검증 과정 시각화
- 실시간 검증 진행 상황 표시
- 각 검증자별 검증 상태 표시
- 검증 완료 시 결과(사실/거짓) 표시

### 6. 합의 메커니즘
- 9개 검증 결과 중 과반수(5개 이상) 기준으로 최종 판정
- 각 명제별 검증 결과 집계
- 최종 결과와 원본 AI 답변 함께 제시

## 기술 스택

### Frontend
- Next.js
- 반응형 웹 디자인
- 실시간 상태 업데이트를 위한 상태 관리

### Backend
- Node.js
- Gemini API 연동 (답변 생성용)
- Gemini API 연동 (명제 분할 및 9개 병렬 검증용)

### UI/UX 요구사항
- 직관적이고 모던한 인터페이스
- 검증 과정의 명확한 시각화
- 로딩 상태 및 진행률 표시
- 반응형 디자인 지원

## 예상 사용자 플로우

1. **입력 단계**: 사용자가 질문 입력
2. **생성 단계**: Gemini AI 답변 생성 (로딩 화면)
3. **분할 단계**: 답변을 명제들로 분할
4. **검증 단계**: 9개 검증자가 각 명제 검증 (3x3 그리드 시각화)
5. **합의 단계**: 검증 결과 집계 및 과반수 판정
6. **결과 단계**: 최종 결과 제시
   - 예시: "토끼는 달릴수있다" [사실] / "토끼는 하늘을 날수있다" [거짓]
   - 원본 AI 답변과 함께 표시

## 주요 고려사항

### 성능
- API 호출 최적화 (특히 9개 Gemini API 병렬 처리)
- 사용자 경험을 위한 적절한 로딩 시간 관리

### 확장성
- 검증자 수 조정 가능한 구조
- 다양한 AI 모델 지원 가능한 아키텍처

### 안정성
- API 오류 처리
- 네트워크 연결 실패 시 재시도 로직
- 부분적 검증 실패 시 대응 방안

## 프로젝트 범위 제한

### 포함 사항
- 기본적인 합의메커니즘 시연
- 단일 질문-답변 처리
- 실시간 검증 과정 시각화

### 제외 사항
- 사용자 계정 시스템
- 검증 결과 저장/히스토리 기능
- 복잡한 명제 분할 알고리즘
- 고급 분석 및 통계 기능

이 문서는 Mira 프로젝트의 개발 방향성과 범위를 명확히 하기 위한 가이드라인입니다.

